PROGRAM
--------
# ARGS: 42
@main(input : int) {
  sum : int = const 0;
  two : int = const 2;
  zero : int = const 0;
.loop:
  cond : bool = eq input zero;
  br cond .done .body;
.body:
  bit : int = call @mod input two;
  input : int = div input two;
  sum : int = add sum bit;
  jmp .loop;
.done:
  print sum;
  ret;
}

@mod(dividend : int, divisor : int) : int {
  quotient : int = div dividend divisor;
  two : int = const 2;
  prod : int = mul two quotient;
  diff : int = sub dividend prod;
  ret diff;
}


TYPES
-------
FUNCTION @main
  bit: int
  cond: bool
  input: int
  sum: int
  two: int
  zero: int
FUNCTION @mod
  diff: int
  dividend: int
  divisor: int
  prod: int
  quotient: int
  two: int

